
SA2 preprocessing notes

CNI processing wiki: http://cni.stanford.edu/wiki/General_data_processing_notes

Kendrick’s preprocessing fmri script info: http://cni.stanford.edu/wiki/Preprocessfmri

Vista lab processing wiki: http://white.stanford.edu/newlm/index.php/Main_Page

helpful pre-processing notes for AFNI here: http://polaris.ssc.uwo.ca/mediawiki/index.php/AFNI_Workflow#Field_Maps

———

TO DO: 

compare SPM, AFNI, and CNI motion correction params
check CNI motion params to make sure there isn’t inordinate head movement for any subject at TR 5 of the 1st run; also look for excessive head movement/anomolous tSNR
note: to deoblique data, call: 3dWarp -prefix deobl_ref -deoblique func_ref_vol.nii
get all raw data in raw folder and rename


* fix orig2tlrc script so that the new tlrc files are renamed and the old file names are deleted (e.g., MV t1_ns_al+tlrc to t1+tlrc, DONT keep a copy of the t1_ns_al+tlrc files)

* make single PE regressors for both positive and negative PEs

note: as of 2/9/15, recon-ed mux data is missing for runs for subs 11,16,17,and 25

****************************************************************************************

open a terminal 

ssh -XY kelly@mt-tam.stanford.edu

from the server: 

ssh -XY hennigan@cnic-smcclure

to get onto CNI’s VM server

then run:

1) python setupRawData.py 
this script: 
	creates symbolic links to raw data
	creates some subject directories, if not already created
	splits t2pd into separate niftis and saves out the 7th vol of the 1st functional run to use as a motion reference
	creates single volume niftis of the first volumes from runs 1 and 4 and their corresponding calibration scans 

2) coreg_prep_afni.py
	skull-strips anatomicals (t1,t2,pd) and moves them into 



 
****************************************************************************************

run preproc_afni.py to do the following: 
1) Drop vols
2) slice time correction
3) motion correction

saves out the follwoing mc params in a text file: 
                    roll  = rotation about the I-S axis }
                    pitch = rotation about the R-L axis } degrees CCW
                    yaw   = rotation about the A-P axis }
                      dS  = displacement in the Superior direction  }
                      dL  = displacement in the Left direction      } mm
                      dP  = displacement in the Posterior direction }
    
to view plots of movement:
1dplot -volreg -dx 5 -xlabel Time vr_run1.1D


4) smooth data 
5) convert from raw to % change units

also makes a binary mask of functional data using the smoothed first functional run (called 'func_mask')


****************************************************************************************

next, run preproc2_afni.py to do the following: 


- concat motion params files, and plot it: 
cat vr_run1.1D  vr_run2.1D  vr_run3.1D  vr_run4.1D  vr_run5.1D vr_run6.1D > vr_ALL.1D
1dplot -dx 163 -xlabel Time -volreg -png vr_ALL -pngs 2000 vr_ALL.1D

*if the alignment is not too crazy, then continue. If there's huge displacement from 
runs 1-3 and 4-6, redo alignment using -twopass -twodup options in 3dvolreg, or try 
something else. 
 
- concat data, zero-out non-brain voxels using an automask

****************************************************************************************

next run coreg_afni.py, then orig2tlrc.py to do the following: 

1) coregister t1-weighted and functional data
2) coregister t2 and pd data w/functional data 
3) normalize functional and structural data to group tlrc template 



****************************************************************************************

create glms for all subjects using the new motion params

fit glm to data
	
________________


————

later on: 


10) make a group mask

3dMean -datum float -prefix mean_mask *mask+tlrc.HEAD
3dcalc -datum byte -prefix group_mask -a mean_mask+tlrc -expr 'step(a-0.75)'

—————————

maybe use 3dClipLevel to set background voxels to zero?


fit glm!!!


Qs:
> what are the 2 transforms that happen with the tlrc normalization? What is the random letter string file? 


> BAD movement for subj 14 on run 6


-------------------

QCs: 

motion correction - check for jumps in root mean square in output RMS in motion params file
					also, jump between the 1st and last vols of func data to look for differences in vol position
					
coreg - check out coregistration using AddEdge: 

cd AddEdge
the type: @AddEdge


-----

note: potentially use dtiGetBrainLabel(ssCoords, labelType) matlab script to id ROIs
